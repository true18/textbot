package bot

import (
	"fmt"
	"strings"
	"unicode/utf8"
	"vkbot/state"
	"vkbot/vk"
)

// CountCommand –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞ —Ç–µ–∫—Å—Ç–∞
func CountCommand(e Event) {
	state.FuncState.Add(e.msg.PeerID, Count)

	kb := vk.CreateKeyboard(true, false, [][]vk.Button{
		{
			vk.AddButton("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤", CountSymbols, vk.KbPrimary),
		},
		{
			vk.AddButton("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤", CountWords, vk.KbDefault),
		},
		{
			vk.AddButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ", Close, vk.KbNegative),
		},
	})

	_ = e.c.SendMessage(e.msg.PeerID, "–•–æ—Ä–æ—à–æ, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –ø–æ–¥—Å—á—ë—Ç–∞ —Å–ª–æ–≤:\n\n–ü–æ–¥—Å—á—ë—Ç —Å–∏–º–≤–æ–ª–æ–≤: \"–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç!\" ‚Üí \"–í —Ç–µ–∫—Å—Ç–µ 12 —Å–∏–º–≤–æ–ª–æ–≤\"\n–ü–æ–¥—Å—á—ë—Ç —Å–ª–æ–≤: \"–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç!\" ‚Üí \"–í —Ç–µ–∫—Å—Ç–µ 2 —Å–ª–æ–≤–∞\"", kb.String(), "", 0)
}

// CountSelect –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–¥—Å—á—ë—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–∏–º–≤–æ–ª–æ–≤ –∏–ª–∏ —Å–ª–æ–≤
func CountSelect(e Event, value int) {
	state.FuncState.Add(e.msg.PeerID, value)

	kb := vk.CreateKeyboard(false, false, [][]vk.Button{
		{
			vk.AddButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å", Close, vk.KbPrimary),
		},
	})

	text := "–û—Ç–ª–∏—á–Ω–æ! –í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–¥—Å—á—ë—Ç %s –≤ —Ç–µ–∫—Å—Ç–µ. –ü—Ä–∏—Å—ã–ª–∞–π—Ç–µ –º–Ω–µ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç, –∞ —è —Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ %s –≤ —Ç–µ–∫—Å—Ç–µ.\n\n–î–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ –¥—Ä—É–≥–æ–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É \"–ó–∞–≤–µ—Ä—à–∏—Ç—å\" "

	if value == CountSymbols {
		_ = e.c.SendMessage(e.msg.PeerID, fmt.Sprintf(text, "—Å–∏–º–≤–æ–ª–æ–≤", "—Å–∏–º–≤–æ–ª–æ–≤"), kb.String(), "", 0)
	} else if value == CountWords {
		_ = e.c.SendMessage(e.msg.PeerID, fmt.Sprintf(text, "—Å–ª–æ–≤", "—Å–ª–æ–≤"), kb.String(), "", 0)
	} else {
		_ = e.c.SendMessage(e.msg.PeerID, "–ü—Ä–æ–∏–∑–æ—à–ª–æ –Ω–µ —Å–æ–≤—Å–µ–º —Ç–æ, —á—Ç–æ —è –æ–∂–∏–¥–∞–ª ü§î", "", "", 0)
	}
}

// CountHandler –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç, –µ—Å–ª–∏ state –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–∞–≤–µ–Ω CountSymbols –∏–ª–∏ CountWords
func CountHandler(e Event, state int) {
	if state == CountSymbols {
		_ = e.c.SendMessage(e.msg.PeerID,
			fmt.Sprintf("–í —Ç–µ–∫—Å—Ç–µ %d %s", utf8.RuneCountInString(e.msg.Text), PrettyWord(utf8.RuneCountInString(e.msg.Text), "—Å–∏–º–≤–æ–ª", "—Å–∏–º–≤–æ–ª–∞", "—Å–∏–º–≤–æ–ª–æ–≤")), "", "", e.msg.ConversationMessageID)
	} else if state == CountWords {
		_ = e.c.SendMessage(e.msg.PeerID,
			fmt.Sprintf("–í —Ç–µ–∫—Å—Ç–µ %d %s", len(strings.Fields(e.msg.Text)), PrettyWord(len(strings.Fields(e.msg.Text)), "—Å–ª–æ–≤–æ", "—Å–ª–æ–≤–∞", "—Å–ª–æ–≤")), "", "", e.msg.ConversationMessageID)
	} else {
		_ = e.c.SendMessage(e.msg.PeerID, "–ü—Ä–æ–∏–∑–æ—à–ª–æ –Ω–µ —Å–æ–≤—Å–µ–º —Ç–æ, —á—Ç–æ —è –æ–∂–∏–¥–∞–ª ü§î", "", "", 0)
	}
}
