package bot

import (
	"fmt"
	"strings"
	"vkbot/state"
	"vkbot/vk"
)

// ReverseCommand –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –∑–µ—Ä–∫–∞–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
func ReverseCommand(e Event) {
	state.FuncState.Add(e.msg.PeerID, Reverse)

	kb := vk.CreateKeyboard(true, false, [][]vk.Button{
		{
			vk.AddButton("–ó–µ—Ä–∫–∞–ª–∏—Ç—å —Å–∏–º–≤–æ–ª—ã", ReverseSymbols, vk.KbPrimary),
		},
		{
			vk.AddButton("–ó–µ—Ä–∫–∞–ª–∏—Ç—å —Å–ª–æ–≤–∞", ReverseWords, vk.KbDefault),
		},
		{
			vk.AddButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ", Close, vk.KbNegative),
		},
	})

	_ = e.c.SendMessage(e.msg.PeerID, "–•–æ—Ä–æ—à–æ, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∑–µ—Ä–∫–∞–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞:\n\n–†–µ–≤–µ—Ä—Å–∏—Ç—å —Å–∏–º–≤–æ–ª—ã: \"–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç!\" ‚Üí \"!—Ç–µ–≤–∏—Ä–ø –º–µ—Å–í\""+
		"\n–†–µ–≤–µ—Ä—Å–∏—Ç—å —Å–ª–æ–≤–∞: \"–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç!\" ‚Üí \"–ø—Ä–∏–≤–µ—Ç! –í—Å–µ–º\"", kb.String(), "", 0)
}

// ReverseSelect –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –∑–µ—Ä–∫–∞–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
func ReverseSelect(e Event, value int) {
	state.FuncState.Add(e.msg.PeerID, value)

	kb := vk.CreateKeyboard(false, false, [][]vk.Button{
		{
			vk.AddButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å", Close, vk.KbPrimary),
		},
	})

	text := "–û—Ç–ª–∏—á–Ω–æ! –í—ã –≤—ã–±—Ä–∞–ª–∏ –∑–µ—Ä–∫–∞–ª–∏—Ä–æ–≤–∞–Ω–∏–µ %s. –ü—Ä–∏—Å—ã–ª–∞–π—Ç–µ –º–Ω–µ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç, –∞ —è –±—É–¥—É –∑–µ—Ä–∫–∞–ª–∏—Ç—å %s.\n\n–î–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ –¥—Ä—É–≥–æ–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É \"–ó–∞–≤–µ—Ä—à–∏—Ç—å\" "

	if value == ReverseSymbols {

		_ = e.c.SendMessage(e.msg.PeerID, fmt.Sprintf(text, "—Å–∏–º–≤–æ–ª–æ–≤", "—Å–∏–º–≤–æ–ª—ã"), kb.String(), "", 0)
	} else if value == ReverseWords {
		state.FuncState.Add(e.msg.PeerID, ReverseWords)
		_ = e.c.SendMessage(e.msg.PeerID, fmt.Sprintf(text, "—Å–ª–æ–≤", "—Å–ª–æ–≤–∞"), kb.String(), "", 0)
	} else {
		_ = e.c.SendMessage(e.msg.PeerID, "–ü—Ä–æ–∏–∑–æ—à–ª–æ –Ω–µ —Å–æ–≤—Å–µ–º —Ç–æ, —á—Ç–æ —è –æ–∂–∏–¥–∞–ª ü§î", "", "", 0)
	}
}

// ReverseHandler –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç, –µ—Å–ª–∏ state –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–∞–≤–µ–Ω ReverseSymbols –∏–ª–∏ ReverseWords
func ReverseHandler(e Event, state int) {
	if state == ReverseSymbols {
		_ = e.c.SendMessage(e.msg.PeerID, ReverseStringSymbols(e.msg.Text), "", "", e.msg.ConversationMessageID)
	} else if state == ReverseWords {
		_ = e.c.SendMessage(e.msg.PeerID, ReverseStringWords(e.msg.Text), "", "", e.msg.ConversationMessageID)
	} else {
		_ = e.c.SendMessage(e.msg.PeerID, "–ü—Ä–æ–∏–∑–æ—à–ª–æ –Ω–µ —Å–æ–≤—Å–µ–º —Ç–æ, —á—Ç–æ —è –æ–∂–∏–¥–∞–ª ü§î", "", "", 0)
	}
}

// ReverseStringSymbols –∑–µ—Ä–∫–∞–ª–∏—Ç —Å–∏–º–≤–æ–ª—ã
func ReverseStringSymbols(s string) string {
	runes := []rune(s)

	for i, j := 0, len(runes)-1; i < j; i, j = i+1, j-1 {
		runes[i], runes[j] = runes[j], runes[i]
	}

	return string(runes)
}

// ReverseStringWords –∑–µ—Ä–∫–∞–ª–∏—Ç —Å–ª–æ–≤–∞
func ReverseStringWords(s string) string {
	words := strings.Fields(s)

	for i, j := 0, len(words)-1; i < j; i, j = i+1, j-1 {
		words[i], words[j] = words[j], words[i]
	}

	return strings.Join(words, " ")
}
